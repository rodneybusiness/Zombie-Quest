# 1950's Zombie Quest - Enhanced Edition

A retro-style point-and-click adventure game built with Pygame, featuring zombies, inventory management, and a compelling story.

## Features

### üßü‚Äç‚ôÇÔ∏è Zombie Theme
- **Living zombies** that chase the player
- **Health system** with damage from zombie attacks
- **Zombie AI** with pathfinding towards the player
- **Animated zombies** with shambling movement

### üéí Inventory System
- **Collectible items**: Medicine, Weapon, Key, Flashlight
- **Item requirements** for certain actions
- **Inventory management** with visual display
- **Item descriptions** and use actions

### üè† Multiple Rooms
- **Street**: Main area with buildings and zombies
- **Diner**: 1950s-style diner with counter and stools
- **Hospital**: Medical facility with experimental medicine
- **Basement**: Dark workshop with tools and supplies

### üéÆ Gameplay Features
- **Point-and-click movement** with WASD support
- **Hotspot interactions** with descriptive text
- **Story progression** with multiple objectives
- **Save/Load system** with JSON persistence
- **Victory/Game Over conditions**

### üé® Visual Improvements
- **VGA color palette** for authentic retro look
- **Animated characters** with walking cycles
- **Health bar** with color-coded status
- **UI elements** with score and room display
- **Message system** for game feedback

### üéØ Objectives
1. Find a weapon to defend yourself
2. Locate experimental medicine
3. Survive zombie encounters
4. Complete the quest to win

## Controls

- **WASD** or **Arrow Keys**: Move character
- **Mouse Click**: Move to location or interact
- **SPACE**: Interact with nearby objects
- **I**: View inventory
- **S**: Save game
- **L**: Load game
- **ESC**: Quit game

## Installation

1. Install Python 3.7 or higher
2. Install dependencies:
   ```bash
   pip install -r requirements.txt
   ```
3. Run the game:
   ```bash
   python zombie_quest.py
   ```

## Game Mechanics

### Health System
- Start with 100 health
- Zombies deal 10 damage per attack
- Health bar changes color based on remaining health
- Game over when health reaches 0

### Inventory System
- Maximum 8 items
- Items have specific uses and requirements
- Some hotspots require specific items to interact

### Zombie AI
- Zombies move towards the player
- Different movement speeds and patterns
- Collision detection for damage

### Story Progression
- Multiple story flags track progress
- Victory requires finding key items
- Different endings based on performance

## Technical Details

- **Engine**: Pygame
- **Resolution**: 320x200 (VGA)
- **Color Palette**: 256-color VGA
- **Save Format**: JSON
- **Target FPS**: 60

## Development

The game is built with a modular architecture:
- `Game`: Main game loop and state management
- `Hero`: Player character with movement and health
- `Zombie`: Enemy AI and behavior
- `Room`: Level design and background generation
- `Inventory`: Item management system
- `MessageBar`: UI feedback system

## Future Enhancements

- Sound effects and music
- More detailed graphics and sprites
- Additional rooms and story content
- Combat mechanics
- Multiple difficulty levels
- Achievement system

## Credits

Built with Pygame and inspired by classic Sierra adventure games.
